{
  "change-log.html": {
    "href": "change-log.html",
    "title": "ðŸ“œ Changelog | Vera Documentation",
    "keywords": "ðŸ“œ Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. [Unreleased] Added Initial project setup Gemini API integration Text-to-Speech conversion functionality Error handling mechanisms Basic testing framework Music playback feature Added the ability to play audio from a YouTube video Added controls for volume, pause and resume. Documentation structure In Progress Speech-to-Text conversion Fixed Resolved a critical bug in the PlayAudioFromUrl method within the music module where the selected video object was unexpectedly null. Enhanced error handling in the music playback feature to provide more informative messages when video information is unavailable. Planned Voice prompting feature Language switching capability Vera Visual expansion (future plan)"
  },
  "index.html": {
    "href": "index.html",
    "title": "ðŸ“– Quick Start | Vera Documentation",
    "keywords": "ðŸ“– Quick Start Vera is a .NET package that converts textual content to speech, utilizing Google AI (Gemini) for text generation and internet-based information retrieval. ðŸ“š Usage Here's an example of using Vera to generate a response from the Gemini API: using Vera; using System; using System.Threading.Tasks; class Program { static async Task Main(string[] args) { string apiKey = \"GEMINI_API_KEY\"; var gemini = new Gemini(apiKey, Gemini.GeminiModel.Gemini15FlashLatest); try { string prompt = \"Explain the concept of artificial intelligence in simple terms.\"; Console.WriteLine(\"Sending prompt to Gemini API...\"); string response = await gemini.FetchResponseAsync(prompt); Console.WriteLine(\"Response from Gemini:\"); Console.WriteLine(response); } catch (GeminiApiException ex) { Console.WriteLine($\"Error occurred: {ex.Message}\"); if (ex.InnerException != null) { Console.WriteLine($\"Inner exception: {ex.InnerException.Message}\"); } } catch (Exception ex) { Console.WriteLine($\"Unexpected error: {ex.Message}\"); } } } Explore the examples directory in this repository for more detailed examples and use cases. These examples highlight Vera's various capabilities and applications. ðŸ“œ License This project is licensed under the MIT License. See the LICENSE file for more details."
  }
}